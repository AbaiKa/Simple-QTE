//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input/QTE/QTE.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @QTEInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @QTEInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""QTE"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""bd7b9a14-4c50-4c91-93fa-d8bd338072cb"",
            ""actions"": [
                {
                    ""name"": ""IA_OneClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dc72ed0f-dea6-455c-8bb8-2ac92ac40ba2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""IA_TwoClicks"",
                    ""type"": ""Button"",
                    ""id"": ""0dfd2f2c-651d-4c1f-b4a8-1e326013d3ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IA_Variant_1"",
                    ""type"": ""Button"",
                    ""id"": ""1dd11852-d4ea-4424-b6e2-6b2efff975e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IA_Variant_2"",
                    ""type"": ""Button"",
                    ""id"": ""25f50368-35b5-49d7-a77b-a9eca0fbb2a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IA_Variant_3"",
                    ""type"": ""Button"",
                    ""id"": ""ac5df053-efe0-4ea2-9bce-c0239def8676"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IA_Variant_4"",
                    ""type"": ""Button"",
                    ""id"": ""f8f6b1ee-6348-44d8-b780-b4bae0cd7d27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""48644329-7924-4b6a-9362-d03da70e71a2"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""IA_OneClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Click V and B"",
                    ""id"": ""8c2597b8-9daa-4e66-b2fb-615f98bd06c7"",
                    ""path"": ""OneModifier(overrideModifiersNeedToBePressedFirst=true)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IA_TwoClicks"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""3dab75a5-f13e-4293-94e8-197b8e82d662"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""IA_TwoClicks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Binding"",
                    ""id"": ""4503f994-e73b-4b56-937d-6011f1975520"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""IA_TwoClicks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0b2e599c-0d4d-4afb-a7c8-53ff9359c6dc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IA_Variant_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1796c4b6-9e70-4183-9797-208000af5745"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IA_Variant_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9ff6907-7a7b-433b-bd80-65d984c2583a"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IA_Variant_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4956e9a9-cdf7-4bd6-8661-d55f5edc2655"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IA_Variant_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_IA_OneClick = m_Main.FindAction("IA_OneClick", throwIfNotFound: true);
        m_Main_IA_TwoClicks = m_Main.FindAction("IA_TwoClicks", throwIfNotFound: true);
        m_Main_IA_Variant_1 = m_Main.FindAction("IA_Variant_1", throwIfNotFound: true);
        m_Main_IA_Variant_2 = m_Main.FindAction("IA_Variant_2", throwIfNotFound: true);
        m_Main_IA_Variant_3 = m_Main.FindAction("IA_Variant_3", throwIfNotFound: true);
        m_Main_IA_Variant_4 = m_Main.FindAction("IA_Variant_4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
    private readonly InputAction m_Main_IA_OneClick;
    private readonly InputAction m_Main_IA_TwoClicks;
    private readonly InputAction m_Main_IA_Variant_1;
    private readonly InputAction m_Main_IA_Variant_2;
    private readonly InputAction m_Main_IA_Variant_3;
    private readonly InputAction m_Main_IA_Variant_4;
    public struct MainActions
    {
        private @QTEInput m_Wrapper;
        public MainActions(@QTEInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @IA_OneClick => m_Wrapper.m_Main_IA_OneClick;
        public InputAction @IA_TwoClicks => m_Wrapper.m_Main_IA_TwoClicks;
        public InputAction @IA_Variant_1 => m_Wrapper.m_Main_IA_Variant_1;
        public InputAction @IA_Variant_2 => m_Wrapper.m_Main_IA_Variant_2;
        public InputAction @IA_Variant_3 => m_Wrapper.m_Main_IA_Variant_3;
        public InputAction @IA_Variant_4 => m_Wrapper.m_Main_IA_Variant_4;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void AddCallbacks(IMainActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
            @IA_OneClick.started += instance.OnIA_OneClick;
            @IA_OneClick.performed += instance.OnIA_OneClick;
            @IA_OneClick.canceled += instance.OnIA_OneClick;
            @IA_TwoClicks.started += instance.OnIA_TwoClicks;
            @IA_TwoClicks.performed += instance.OnIA_TwoClicks;
            @IA_TwoClicks.canceled += instance.OnIA_TwoClicks;
            @IA_Variant_1.started += instance.OnIA_Variant_1;
            @IA_Variant_1.performed += instance.OnIA_Variant_1;
            @IA_Variant_1.canceled += instance.OnIA_Variant_1;
            @IA_Variant_2.started += instance.OnIA_Variant_2;
            @IA_Variant_2.performed += instance.OnIA_Variant_2;
            @IA_Variant_2.canceled += instance.OnIA_Variant_2;
            @IA_Variant_3.started += instance.OnIA_Variant_3;
            @IA_Variant_3.performed += instance.OnIA_Variant_3;
            @IA_Variant_3.canceled += instance.OnIA_Variant_3;
            @IA_Variant_4.started += instance.OnIA_Variant_4;
            @IA_Variant_4.performed += instance.OnIA_Variant_4;
            @IA_Variant_4.canceled += instance.OnIA_Variant_4;
        }

        private void UnregisterCallbacks(IMainActions instance)
        {
            @IA_OneClick.started -= instance.OnIA_OneClick;
            @IA_OneClick.performed -= instance.OnIA_OneClick;
            @IA_OneClick.canceled -= instance.OnIA_OneClick;
            @IA_TwoClicks.started -= instance.OnIA_TwoClicks;
            @IA_TwoClicks.performed -= instance.OnIA_TwoClicks;
            @IA_TwoClicks.canceled -= instance.OnIA_TwoClicks;
            @IA_Variant_1.started -= instance.OnIA_Variant_1;
            @IA_Variant_1.performed -= instance.OnIA_Variant_1;
            @IA_Variant_1.canceled -= instance.OnIA_Variant_1;
            @IA_Variant_2.started -= instance.OnIA_Variant_2;
            @IA_Variant_2.performed -= instance.OnIA_Variant_2;
            @IA_Variant_2.canceled -= instance.OnIA_Variant_2;
            @IA_Variant_3.started -= instance.OnIA_Variant_3;
            @IA_Variant_3.performed -= instance.OnIA_Variant_3;
            @IA_Variant_3.canceled -= instance.OnIA_Variant_3;
            @IA_Variant_4.started -= instance.OnIA_Variant_4;
            @IA_Variant_4.performed -= instance.OnIA_Variant_4;
            @IA_Variant_4.canceled -= instance.OnIA_Variant_4;
        }

        public void RemoveCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActions @Main => new MainActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnIA_OneClick(InputAction.CallbackContext context);
        void OnIA_TwoClicks(InputAction.CallbackContext context);
        void OnIA_Variant_1(InputAction.CallbackContext context);
        void OnIA_Variant_2(InputAction.CallbackContext context);
        void OnIA_Variant_3(InputAction.CallbackContext context);
        void OnIA_Variant_4(InputAction.CallbackContext context);
    }
}
